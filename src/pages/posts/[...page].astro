---
import Layout from "../../layouts/Layout.astro";
import PaginationControl from "../../components/PaginationControl.astro";

import { getCollection } from "astro:content";
import type { PaginateFunction } from "astro";
import { format } from "date-fns";

export async function getStaticPaths({
	paginate,
}: {
	paginate: PaginateFunction;
}) {
	const blogEntries = await getCollection("blog");

	const formattedEntries = blogEntries.sort(
		(
			a: { data: { date: string | number | Date } },
			b: { data: { date: string | number | Date } },
		) => {
			return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
		},
	);

	return paginate(formattedEntries, { pageSize: 4 });
}

const { page } = Astro.props;
const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = pathname[1];
---

<Layout title="Posts">
	<div class="mx-auto h-full flex grow flex-col container">
		<h1 class="text-5xl font-bold">All Posts</h1>
		<hr class="my-2" />

		<ul class="flex grow flex-col gap-8 p-4">
			{
				page.data.map(async (post) => {
					const renderedPost = await post.render();

					return (
						<li>
							<article class="flex flex-col gap-2">
								<div class="flex flex-row items-center gap-2">
									<div class="flex flex-row items-center gap-1">
										<i class="i-fa6-solid:calendar-days" />
										<span>
											{format(new Date(post.data.date), "do LLLL, yyyy")}
										</span>
									</div>

									<span>â€¢</span>
									<div class="flex flex-row items-center gap-1">
										<i class="i-fa6-solid:clock" />
										<span>
											{renderedPost.remarkPluginFrontmatter.minutesRead}
										</span>
									</div>
								</div>
								<h2 class="text-3xl font-semibold">
									<a href={`/posts/${post.slug}`}>{post.data.title}</a>
								</h2>
								<p class="truncate">{post.data.description}</p>

								<div class="flex flex-row items-center gap-2">
									{post.data.tags.map((tag) => (
										<span class="overflow-hidden rounded-md bg-slate-100 px-1 py-0">
											<em>#{tag}</em>
										</span>
									))}
								</div>
							</article>
						</li>
					);
				})
			}
		</ul>

		<div class="flex flex-row justify-center p-4">
			<PaginationControl
				length={page.lastPage}
				currentURL={page.url.current}
				currentPageIdx={page.currentPage}
				firstURL={`/${firstPath}`}
				lastURL={`/${firstPath}/${page.lastPage}`}
				prevURL={page.url.prev}
				nextURL={page.url.next}
			/>
		</div>
	</div>
</Layout>
