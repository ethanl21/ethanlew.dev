---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { format } from "date-fns";
import TableOfContents from "../../components/TableOfContents.astro";

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
	const blogEntries = await getCollection("blog");
	return blogEntries.map((entry: any) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}
// 2. For your template, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter, headings } = await entry.render();

// Metadata
const formattedDate = format(new Date(entry.data.date), "do LLLL, yyyy");
const telegramShareURL = `http://telegram.me/share/url?url=${encodeURI(Astro.url.href)}&text=${encodeURI(entry.data.title)}`;
const bskyShareURL = `http://bsky.app/intent/compose?text=${encodeURI(Astro.url.href)}`;
const shareData = {
	title: "ethanlew.dev",
	text: entry.data.title,
	url: Astro.url.href,
};
---

<Layout title={entry.data.title}>
	<div class="mx-auto px-10 container">
		<div
			class="grid gap-3 lt-md:block"
			style="grid-template-columns: 1fr 3fr 1fr;"
		>
			<aside class="sticky top-10 mt-10 h-fit w-full lt-md:hidden">
				<h1>Contents</h1>
				<TableOfContents headings={headings} />
			</aside>

			<main class="mx-auto w-fit">
				<header>
					<h1 class="text-4xl font-semibold leading-10">{entry.data.title}</h1>
					<div
						class="w-fit flex flex-row items-center justify-center space-x-3"
					>
						<div class="flex flex-row items-center gap-1">
							<i class="i-fa6-solid:calendar-days my-auto"></i>
							{formattedDate}
						</div>
						<div class="flex flex-row items-center gap-1">
							<i class="i-fa6-solid:clock"></i>
							{remarkPluginFrontmatter.minutesRead}
						</div>
					</div>

					<div>
						<i class="i-fa6-solid:tags"></i>
						<ul class="inline-flex flex-row space-x-2">
							{
								entry.data.tags.map((tag: string) => (
									<li>
										<a
											href={`/tags/${tag}`}
											class="font-mono underline decoration-dotted"
										>
											#{tag}
										</a>
									</li>
								))
							}
						</ul>
					</div>
				</header>

				<hr />

				<article class="max-w-full w-full prose" data-content>
					<Content />
				</article>

				<div class="my-10 w-full flex flex-row justify-between">
					<div>
						<span class="font-italic">Share this post via:</span>
						<ul class="flex flex-row gap-2">
							<li>
								<a href={bskyShareURL} rel="noopener" target="_blank">
									<i class="i-fa6-brands:bluesky"></i>
								</a>
							</li>
							<li>
								<a href={telegramShareURL} rel="noopener" target="_blank">
									<i class="i-fa6-brands:telegram"></i>
								</a>
							</li>
							<li>
								<button
									aria-label="Open share sheet"
									data-web-share
									title="Web Share API"
									data-share={JSON.stringify(shareData)}
								>
									<i class="i-fa6-solid:share-from-square"></i>
								</button>
							</li>
						</ul>
					</div>

					<div>
						<button data-to-top>
							<i class="i-fa6-solid:angle-up"></i>
							Back to top
						</button>
					</div>
				</div>
			</main>

			<span aria-hidden></span>
		</div>

		<hr class="border-dashed" />

		<script
			is:inline
			src="https://utteranc.es/client.js"
			data-repo="ethanl21/ethanlew.dev"
			issue-term="pathname"
			data-theme="github-light"
			crossorigin="anonymous"
			async></script>
	</div>

	<div class="fixed left-0 top-0 h-1 w-full">
		<div class="h-full bg-indigo-3" style="width: 0%;" data-top-progress-bar>
		</div>
	</div>

	<!-- make sure the font-bold class is included for the table of contents -->
	<p class="hidden font-bold" aria-hidden></p>
	<script>
		import { setup } from "./_slug.mts";

		setup();
	</script>
</Layout>
